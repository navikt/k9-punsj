name: Build Master

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'

env:
  BASE_IMAGE: docker.pkg.github.com/${{ github.repository }}/k9-punsj
  GITHUB_USERNAME: x-access-token
  GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: 14
      - uses: actions/cache@v2.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Bygge JAR
        run: |
          ./mvnw clean package -DskipTests --settings ./.m2/settings.xml
          echo "::set-env name=TAG::$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)"
          echo "::set-env name=IMAGE::$BASE_IMAGE:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)"
      - name: Bygg & last opp Docker image
        run: |
          docker build --tag ${IMAGE} --tag ${BASE_IMAGE}:latest ./app/.
          echo "$GITHUB_PASSWORD" | docker login --username "$GITHUB_USERNAME" --password-stdin https://docker.pkg.github.com
          docker push $BASE_IMAGE:latest
          docker push $IMAGE
      - name: Deploy til preprod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/dev-fss.yml

      - name: Deploy til prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/prod-fss.yml
